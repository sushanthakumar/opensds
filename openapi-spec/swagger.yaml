openapi: 3.0.0
info:
  version: "v1beta"
  title: OpenSDS Controller API
  description: OpenSDS Controller API to manage mutliple backend storages.
  termsOfService: 'https://www.linuxfoundation.org/terms'
  contact:
    name: OpenSDS Support
    url: 'https://opensds.slack.com'
    email: support@opensds.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  '/snmp/communities':
    parameters:
    get:
      tags:
        - SnmpCommunity
      description: Lists snmp v2c community configurations
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortDir'
        - name: sortKey
          in: query
          description: Sorting key word, such as communityName, createdAt
          schema:
            type: string
        - name: deviceId
          in: query
          description: Device id for which communities are configured
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SnmpCommunityRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
    post:
      tags:
        - SnmpCommunity
      description: Creates snmp community configuration. DeviceId and communitystr combination should be unique
      requestBody:
        $ref: '#/components/requestBodies/SnmpCommunityCreateSpec'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpCommunityRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
  '/snmp/communities/{communityId}':
    parameters:
      - $ref: '#/components/parameters/communityId'
    get:
      tags:
        - SnmpCommunity
      description: Get details snmp communities configured for backend devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpCommunityRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '404':
          $ref: '#/components/responses/HTTPStatus404'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
    delete:
      tags:
        - SnmpCommunity
      description: Removes snmp community configured for backend device
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '404':
          $ref: '#/components/responses/HTTPStatus404'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
  '/snmp/usmUsers':
    parameters:
    get:
      tags:
        - SnmpUsmUser
      description: Lists snmp V3 usm users.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortDir'
        - name: sortKey
          in: query
          description: Sorting key word, such as communityName, createdAt
          schema:
            type: string
        - name: deviceId
          in: query
          description: Device id for which usm users are configured
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SnmpUsmUserRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
    post:
      tags:
        - SnmpUsmUser
      description: Creates snmp V3 usm user. DeviceId and username combination should be unique
      requestBody:
        $ref: '#/components/requestBodies/SnmpUsmUserCreateSpec'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpUsmUserRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
  '/snmp/usmUsers/{userId}':
      parameters:
        - $ref: '#/components/parameters/userId'
      get:
        tags:
          - SnmpUsmUser
        description: Get details snmp v3 usm users configured for backend devices
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SnmpUsmUserRespSpec'
          '400':
            $ref: '#/components/responses/HTTPStatus400'
          '401':
            $ref: '#/components/responses/HTTPStatus401'
          '403':
            $ref: '#/components/responses/HTTPStatus403'
          '404':
            $ref: '#/components/responses/HTTPStatus404'
          '500':
            $ref: '#/components/responses/HTTPStatus500'
      put:
        tags:
          - SnmpUsmUser
        description: Modify SNMP V3 usm user details
        operationId: putSnmpUsmUser
        requestBody:
          $ref: '#/components/requestBodies/SnmpUsmUserUpdateSpec'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SnmpUsmUserRespSpec'
          '400':
            $ref: '#/components/responses/HTTPStatus400'
          '401':
            $ref: '#/components/responses/HTTPStatus401'
          '403':
            $ref: '#/components/responses/HTTPStatus403'
          '404':
            $ref: '#/components/responses/HTTPStatus404'
          '500':
            $ref: '#/components/responses/HTTPStatus500'
      delete:
        tags:
          - SnmpUsmUser
        description: Removes snmp v3 usm user configured for backend device
        responses:
          '200':
            description: OK
            content: {}
          '400':
            $ref: '#/components/responses/HTTPStatus400'
          '401':
            $ref: '#/components/responses/HTTPStatus401'
          '403':
            $ref: '#/components/responses/HTTPStatus403'
          '404':
            $ref: '#/components/responses/HTTPStatus404'
          '500':
            $ref: '#/components/responses/HTTPStatus500'
  '/snmp/deviceTrapConfigs':
    parameters:
    get:
      tags:
        - SnmpDeviceTrapConfig
      description: Lists snmp device trap configurations.
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sortDir'
        - name: sortKey
          in: query
          description: Sorting key word, such as version, createdAt
          schema:
            type: string
        - name: deviceIpAddr
          in: query
          description: Device ip address
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SnmpDeviceTrapConfigRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
    post:
      tags:
        - SnmpDeviceTrapConfig
      description: Creates snmp device trap config.
      requestBody:
        $ref: '#/components/requestBodies/SnmpDeviceTrapConfigCreateSpec'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpDeviceTrapConfigRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
  '/snmp/deviceTrapConfigs/{deviceTrapConfigId}':
    parameters:
      - $ref: '#/components/parameters/deviceTrapConfigId'
    get:
      tags:
        - SnmpDeviceTrapConfig
      description: Get details about snmp device trap configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpDeviceTrapConfigRespSpec'
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '404':
          $ref: '#/components/responses/HTTPStatus404'
        '500':
          $ref: '#/components/responses/HTTPStatus500'
    delete:
      tags:
        - SnmpDeviceTrapConfig
      description: Removes snmp device trap configuration
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/HTTPStatus400'
        '401':
          $ref: '#/components/responses/HTTPStatus401'
        '403':
          $ref: '#/components/responses/HTTPStatus403'
        '404':
          $ref: '#/components/responses/HTTPStatus404'
        '500':
          $ref: '#/components/responses/HTTPStatus500'

security:
  - basicAuth: []
externalDocs:
  description: The offical OpenSDS Controller API specification
  url: 'https://github.com/opensds/opensds'
servers:
  - url: 'https://localhost:50040/'
  - url: 'http://localhost:50040/'
components:
  parameters:
    apiVersion:
      name: apiVersion
      in: path
      required: true
      description: API version string
      schema:
        type: string
        pattern: 'v([1-9][0-9]*)((alpha)([1-9][0-9]*)|(beta)([1-9][0-9]*))?'
    deviceTrapConfigId:
      name: deviceTrapConfigId
      in: path
      required: true
      description: The generated Id of the device trap configuration.
      schema:
        type: string
    communityId:
      name: communityId
      in: path
      required: true
      description: The generated Id of the snmp community configuration.
      schema:
        type: string
    userId:
      name: userId
      in: path
      required: true
      description: The generated Id of the snmp usm user configuration.
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Number of query results on multiple pages
      schema:
        minimum: 1
        type: integer
        format: int32
    offset:
      name: offset
      in: query
      description: Start position of the pagination query
      schema:
        minimum: 0
        type: integer
        format: int32
    sortDir:
      name: sortDir
      in: query
      description: Ascending or descending
      schema:
        type: string
        enum:
        - asc
        - desc
  responses:
    HTTPStatus400:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus401:
      description: NotAuthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus404:
      description: The resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
    HTTPStatus500:
      description: An unexpected error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSpec'
  requestBodies:
    SnmpDeviceTrapConfigCreateSpec:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnmpDeviceTrapConfigCreateSpec'
    SnmpCommunityCreateSpec:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnmpCommunityCreateSpec'
    SnmpUsmUserCreateSpec:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnmpUsmUserCreateSpec'
    SnmpUsmUserUpdateSpec:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SnmpUsmUserUpdateSpec'
  schemas:
    BaseModel:
      type: object
      properties:
        id:
          type: string
          example: 084bf71e-a102-11e7-88a8-e31fe6d52248
          readOnly: true
        createdAt:
          type: string
          format: date-time
          example: '2017-07-10T14:36:58.014Z'
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          example: '2017-07-10T14:36:58.014Z'
          readOnly: true
    SnmpDeviceTrapConfigCreateSpec:
      description: Snmp device trap configuration request attributes.
      required:
        - deviceIpAddr
        - userInfo
      type: object
      properties:
        version:
          type: string
          example: SNMPV3
          enum:
            - SNMPV2c
            - SNMPV3
          description: snmp version number
        userInfo:
          type: string
          minLength: 1
          description: it holds community string in case of V2c version and usm user name incase of V3 version
        deviceIpAddr:
          type: string
          description: IP address of the device which is sending traps
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
          example: 8.8.8.8

    SnmpDeviceTrapConfigRespSpec:
      description: Response for snmp device trap configuration.
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          properties:
            version:
              type: string
              example: SNMPV3
              enum:
                - SNMPV2c
                - SNMPV3
            userInfo:
              type: string
            deviceIpAddr:
              type: string

    SnmpCommunityCreateSpec:
      description: Snmp community configuration request attributes.
      required:
        - deviceId
        - communityStr
      type: object
      properties:
        deviceId:
          type: string
          description: Device id for which this community is getting configured
        communityStr:
          type: string
          description: Community string

    SnmpCommunityRespSpec:
      description: Response for snmp community configuration.
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          properties:
            deviceId:
              type: string
            communityStr:
              type: string

    SnmpUsmUserCreateSpec:
      description: SNMP v3 usm user request attributes.
      required:
        - deviceId
        - username
      type: object
      properties:
        deviceId:
          type: string
          description: Device id for which this community is getting configured
        username:
          type: string
          description: v3 usm username
        engineId:
          type: string
          description: EngineId of device
        securityLevel:
          type: string
          description: Security level
          example: noAuthnoPriv
          enum:
            - noAuthnoPriv
            - authNoPriv
            - authPriv
        authProtocol:
          type: string
          description: Authentication protocol supported
          example: MD5
          enum:
            - MD5
            - SHA
        authPasswd:
          type: string
          description: Authentication password
        privProtocol:
          type: string
          description: Privacy protocol supported
          example: DES
          enum:
            - DES
            - AES
        privPasswd:
          type: string
          description: Privacy password

    SnmpUsmUserUpdateSpec:
      description: SNMP v3 usm user config update. DeviceId and username together for the key here.
      type: object
      properties:
        engineId:
          type: string
          description: EngineId of device
        securityLevel:
          type: string
          description: Security level
          example: noAuthnoPriv
          enum:
            - noAuthnoPriv
            - authNoPriv
            - authPriv
        authProtocol:
          type: string
          description: Authentication protocol supported
          example: MD5
          enum:
            - MD5
            - SHA
        authPasswd:
          type: string
          description: Authentication password
        privProtocol:
          type: string
          description: Privacy protocol supported
          example: DES
          enum:
            - DES
            - AES
        privPasswd:
          type: string
          description: Privacy password

    SnmpUsmUserRespSpec:
      description: Response for snmp v3 usm user configuration.
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - type: object
          properties:
            deviceId:
              type: string
            username:
              type: string
            engineId:
              type: string
            securityLevel:
              type: string
              example: noAuthnoPriv
              enum:
                - noAuthnoPriv
                - authNoPriv
                - authPriv
            authProtocol:
              type: string
              example: MD5
              enum:
                - MD5
                - SHA
            authPasswd:
              type: string
            privProtocol:
              type: string
              example: DES
              enum:
                - DES
                - AES
            privPasswd:
              type: string
